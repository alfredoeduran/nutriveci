"""
Script para poblar la base de datos con datos iniciales de ingredientes.
Este script carga un conjunto b√°sico de ingredientes comunes organizados por categor√≠as.
"""

import json
import os
import sys
import asyncio
from uuid import UUID
from typing import Dict, List

# Agregar el directorio ra√≠z al path para poder importar desde backend
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from backend.db.models import IngredientCreate
from backend.db import crud
from backend.db.categories import IngredientCategory, REGIONS, PriceCategory, get_nutritional_profile


# Datos de ingredientes b√°sicos organizados por categor√≠a
BASIC_INGREDIENTS = {
    IngredientCategory.FRUTAS.value: [
        {"name": "Manzana", "seasonal": True, "price_category": PriceCategory.BAJO.value, "region": ["local"]},
        {"name": "Pl√°tano", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["latinoamericana"]},
        {"name": "Naranja", "seasonal": True, "price_category": PriceCategory.BAJO.value, "region": ["local", "mediterr√°nea"]},
        {"name": "Fresa", "seasonal": True, "price_category": PriceCategory.MEDIO.value, "region": ["local"]},
        {"name": "Mango", "seasonal": True, "price_category": PriceCategory.MEDIO.value, "region": ["latinoamericana", "asi√°tica"]}
    ],
    IngredientCategory.VERDURAS.value: [
        {"name": "Zanahoria", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local"]},
        {"name": "Br√≥coli", "seasonal": True, "price_category": PriceCategory.BAJO.value, "region": ["local", "europea"]},
        {"name": "Cebolla", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local", "internacional"]},
        {"name": "Tomate", "seasonal": True, "price_category": PriceCategory.BAJO.value, "region": ["local", "mediterr√°nea"]},
        {"name": "Espinaca", "seasonal": True, "price_category": PriceCategory.BAJO.value, "region": ["local", "europea"]}
    ],
    IngredientCategory.CARNES.value: [
        {"name": "Pollo", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["internacional"]},
        {"name": "Carne molida", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["local"]},
        {"name": "At√∫n", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["internacional"]},
        {"name": "Salm√≥n", "seasonal": True, "price_category": PriceCategory.ALTO.value, "region": ["europea", "norteamericana"]},
        {"name": "Cerdo", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["local", "europea"]}
    ],
    IngredientCategory.LACTEOS.value: [
        {"name": "Leche", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local"]},
        {"name": "Queso", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["local", "europea"]},
        {"name": "Yogur", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local", "internacional"]},
        {"name": "Crema", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local"]},
        {"name": "Mantequilla", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local", "europea"]}
    ],
    IngredientCategory.GRANOS.value: [
        {"name": "Arroz", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local", "asi√°tica"]},
        {"name": "Quinoa", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["latinoamericana"]},
        {"name": "Avena", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local", "europea"]},
        {"name": "Pasta", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["mediterr√°nea", "europea"]},
        {"name": "Ma√≠z", "seasonal": True, "price_category": PriceCategory.BAJO.value, "region": ["local", "latinoamericana"]}
    ],
    IngredientCategory.LEGUMBRES.value: [
        {"name": "Frijoles negros", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["latinoamericana"]},
        {"name": "Lentejas", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["mediterr√°nea", "medio_oriente"]},
        {"name": "Garbanzos", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["mediterr√°nea", "medio_oriente"]},
        {"name": "Soya", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["asi√°tica"]},
        {"name": "Guisantes", "seasonal": True, "price_category": PriceCategory.BAJO.value, "region": ["local", "europea"]}
    ],
    IngredientCategory.ACEITES.value: [
        {"name": "Aceite de oliva", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["mediterr√°nea"]},
        {"name": "Aceite de coco", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["asi√°tica", "caribe√±a"]},
        {"name": "Aceite vegetal", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["local", "internacional"]}
    ],
    IngredientCategory.FRUTOS_SECOS.value: [
        {"name": "Almendras", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["mediterr√°nea"]},
        {"name": "Nueces", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["norteamericana", "europea"]},
        {"name": "Semillas de ch√≠a", "seasonal": False, "price_category": PriceCategory.MEDIO.value, "region": ["latinoamericana"]}
    ],
    IngredientCategory.CONDIMENTOS.value: [
        {"name": "Sal", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["internacional"]},
        {"name": "Pimienta", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["internacional"]},
        {"name": "Oregano", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["mediterr√°nea"]},
        {"name": "Canela", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["medio_oriente", "asi√°tica"]},
        {"name": "Chile", "seasonal": False, "price_category": PriceCategory.BAJO.value, "region": ["latinoamericana"]}
    ]
}


async def create_ingredient_record(category: str, data: Dict) -> UUID:
    """
    Crear un registro de ingrediente en la base de datos
    
    Args:
        category: Categor√≠a del ingrediente
        data: Datos adicionales del ingrediente
        
    Returns:
        UUID: ID del ingrediente creado
    """
    # Obtener perfil nutricional aproximado basado en la categor√≠a
    nutritional_value = get_nutritional_profile(category)
    
    # Crear objeto de ingrediente
    ingredient_data = IngredientCreate(
        name=data["name"],
        category=category,
        seasonal=data.get("seasonal", False),
        price_category=data.get("price_category", PriceCategory.MEDIO.value),
        region=data.get("region", ["local"]),
        nutritional_value=nutritional_value
    )
    
    # Crear ingrediente en la base de datos
    try:
        ingredient = await crud.create_ingredient(ingredient_data)
        print(f"‚úÖ Ingrediente creado: {data['name']} ({category})")
        return ingredient.id
    except Exception as e:
        print(f"‚ùå Error al crear ingrediente {data['name']}: {str(e)}")
        return None


async def populate_ingredients():
    """Poblar la base de datos con ingredientes iniciales"""
    print("üîÑ Iniciando poblaci√≥n de ingredientes...")
    
    # Contadores para estad√≠sticas
    total = 0
    success = 0
    errors = 0
    
    # Iterar sobre cada categor√≠a
    for category, ingredients in BASIC_INGREDIENTS.items():
        print(f"\nüìã Procesando categor√≠a: {category}")
        
        # Iterar sobre cada ingrediente en la categor√≠a
        for ingredient_data in ingredients:
            total += 1
            result = await create_ingredient_record(category, ingredient_data)
            if result:
                success += 1
            else:
                errors += 1
    
    # Imprimir estad√≠sticas
    print(f"\nüìä Resumen:")
    print(f"   Total de ingredientes procesados: {total}")
    print(f"   Ingredientes creados exitosamente: {success}")
    print(f"   Errores: {errors}")
    print("\n‚úÖ Proceso de poblaci√≥n de ingredientes completado.")


if __name__ == "__main__":
    asyncio.run(populate_ingredients()) 